<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WeUiSharp.Controls"
                    xmlns:windows="clr-namespace:WeUiSharp.Windows"
                    xmlns:markup="clr-namespace:WeUiSharp.Markup">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/Geometries.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />

    <!--正常置顶按钮样式-->
    <Style x:Key="TopmostNormalStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:PathButton CornerRadius="0" DefaultBackground="{DynamicResource Window.TopmostButton.Static.Background}" 
                                         DefaultForeground="{DynamicResource Window.TopmostButton.Static.Foreground}"
                                         MouseOverForeground="{DynamicResource Window.TopmostButton.MouseOver.Foreground}"
                                         MouseOverBackground="{DynamicResource Window.TopmostButton.MouseOver.Background}"
                                         PressedForeground="{DynamicResource Window.TopmostButton.Pressed.Foreground}"
                                         PressedBackground="{DynamicResource Window.TopmostButton.Pressed.Background}"
                                         Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <controls:PathButton.Path>
                            <Path Stretch="Uniform" Width="8" Height="10" SnapsToDevicePixels="False" Data="{StaticResource WeUiGeometry_Topmost}"/>
                        </controls:PathButton.Path>
                    </controls:PathButton>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

    <!--已置顶按钮样式-->
    <Style x:Key="TopmostStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="TopmostBtnGrid">
                        <controls:PathButton CornerRadius="2" Width="18" Height="18" DefaultBackground="{DynamicResource Window.TopmostButton.MouseOver.Background}" 
                                         DefaultForeground="{DynamicResource Window.TopmostButton.Static.Foreground}"
                                         MouseOverForeground="{DynamicResource Window.TopmostButton.MouseOver.Foreground}"
                                         MouseOverBackground="{DynamicResource Window.TopmostButton.MouseOver.Background}"
                                         PressedForeground="{DynamicResource Window.TopmostButton.Pressed.Foreground}"
                                         PressedBackground="{DynamicResource Window.TopmostButton.Pressed.Background}">
                            <controls:PathButton.Path>
                                <Path Stretch="Uniform" Width="8" Height="10" SnapsToDevicePixels="False" Data="{StaticResource WeUiGeometry_Topmost}"/>
                            </controls:PathButton.Path>
                        </controls:PathButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TopmostBtnGrid" Property="Background" Value="{DynamicResource Window.TopmostButton.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="TopmostBtnGrid" Property="Background" Value="{DynamicResource Window.TopmostButton.Pressed.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

    <!--最小化按钮样式-->
    <Style x:Key="MinimizeStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:PathButton CornerRadius="0" DefaultBackground="{DynamicResource Window.MinButton.Static.Background}" 
                                         DefaultForeground="{DynamicResource Window.MinButton.Static.Foreground}"
                                         MouseOverForeground="{DynamicResource Window.MinButton.MouseOver.Foreground}"
                                         MouseOverBackground="{DynamicResource Window.MinButton.MouseOver.Background}"
                                         PressedForeground="{DynamicResource Window.MinButton.Pressed.Foreground}"
                                         PressedBackground="{DynamicResource Window.MinButton.Pressed.Background}"
                                         Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <controls:PathButton.Path>
                            <Path Stretch="Uniform" Width="8" Height="8" SnapsToDevicePixels="True" Data="{StaticResource WeUiGeometry_Min}"/>
                        </controls:PathButton.Path>
                    </controls:PathButton>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

    <!--最大化按钮样式-->
    <Style x:Key="MaximizeStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:PathButton CornerRadius="0" DefaultBackground="{DynamicResource Window.MaxButton.Static.Background}" 
                                         DefaultForeground="{DynamicResource Window.MaxButton.Static.Foreground}"
                                         MouseOverForeground="{DynamicResource Window.MaxButton.MouseOver.Foreground}"
                                         MouseOverBackground="{DynamicResource Window.MaxButton.MouseOver.Background}"
                                         PressedForeground="{DynamicResource Window.MaxButton.Pressed.Foreground}"
                                         PressedBackground="{DynamicResource Window.MaxButton.Pressed.Background}"
                                         Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <controls:PathButton.Path>
                            <Path Stretch="Uniform" Width="7" Height="7" SnapsToDevicePixels="False" Data="{StaticResource WeUiGeometry_Max}"/>
                        </controls:PathButton.Path>
                    </controls:PathButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--恢复按钮样式-->
    <Style x:Key="NormalStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:PathButton CornerRadius="0" DefaultBackground="{DynamicResource Window.MaxButton.Static.Background}" 
                                         DefaultForeground="{DynamicResource Window.MaxButton.Static.Foreground}"
                                         MouseOverForeground="{DynamicResource Window.MaxButton.MouseOver.Foreground}"
                                         MouseOverBackground="{DynamicResource Window.MaxButton.MouseOver.Background}"
                                         PressedForeground="{DynamicResource Window.MaxButton.Pressed.Foreground}"
                                         PressedBackground="{DynamicResource Window.MaxButton.Pressed.Background}"
                                         Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <controls:PathButton.Path>
                            <Path Stretch="Uniform" Width="8" Height="8" SnapsToDevicePixels="True" Data="{StaticResource WeUiGeometry_Normal}"/>
                        </controls:PathButton.Path>
                    </controls:PathButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--关闭按钮的样式-->
    <Style x:Key="CloseStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:PathButton CornerRadius="0" DefaultBackground="{DynamicResource Window.CloseButton.Static.Background}" 
                                         DefaultForeground="{DynamicResource Window.CloseButton.Static.Foreground}"
                                         MouseOverForeground="{DynamicResource Window.CloseButton.MouseOver.Foreground}"
                                         MouseOverBackground="{DynamicResource Window.CloseButton.MouseOver.Background}"
                                         PressedForeground="{DynamicResource Window.CloseButton.Pressed.Foreground}"
                                         PressedBackground="{DynamicResource Window.CloseButton.Pressed.Background}"
                                         Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <controls:PathButton.Path>
                            <Path Stretch="Uniform" Width="7" Height="7" Data="{StaticResource WeUiGeometry_Close}"/>
                        </controls:PathButton.Path>
                    </controls:PathButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Window" TargetType="{x:Type windows:Window}">
        <Setter Property="Width" Value="800"/>
        <Setter Property="Height" Value="600"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Window.Static.Border}"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="ResizeMode" Value="{Binding ResizeMode}"/>
        <Setter Property="TitleColor" Value="{DynamicResource Window.Title.Static.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type windows:Window}">
                    <!-- 使用了WindowsChrome后，最外层的Border的Margin属性会强制自动设置为0 -->
                    <Border>
                        <!-- 这里才是实际的Border -->
                        <Border x:Name="MainBorder" Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ShadowSpaceThickness}" 
                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}"
                                Effect="{TemplateBinding ShadowEffect}">
                            <!-- 解决Border设为圆角后，内部内容的四个角会突出出来 -->
                            <!-- 参考： How to make the contents of a round-cornered border be also round-cornered? -->
                            <!-- https://stackoverflow.com/questions/324641/how-to-make-the-contents-of-a-round-cornered-border-be-also-round-cornered -->
                            <Border.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border 
                                        Background="Black"
                                        SnapsToDevicePixels="True"
                                        CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}"
                                        Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                                        Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}" 
                                        />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.OpacityMask>

                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <controls:ClippingBorder Grid.Row="0" Grid.RowSpan="2" Background="{TemplateBinding Background}" 
                                    CornerRadius="{TemplateBinding CornerRadius}" 
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    ClipContent="True" >
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter Content="{TemplateBinding Content}"/>
                                    </Grid>
                                </controls:ClippingBorder>

                                <!-- 标题 -->
                                <TextBlock x:Name="Title" Grid.Row="0" Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TitleColor}" 
                                           Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TitleMargin}" SnapsToDevicePixels="True" 
                                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TitleFontSize}"
                                           HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TitleAlign}" VerticalAlignment="Top" 
                                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Title}">
                                </TextBlock>

                                <!-- 系统按钮 -->
                                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" 
                                        Margin="0 1 1 0" WindowChrome.IsHitTestVisibleInChrome="True"
                                        VerticalAlignment="Top" >

                                    <Button x:Name="TopmostBtn" ToolTip="{markup:Loc SystemButtonTopmost}" 
                                            Style="{StaticResource TopmostNormalStyle}" 
                                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsTopmostBtnEnable, Converter={StaticResource VisibleIfTrueConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TopmostCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>

                                    <Button x:Name="MinBtn"   ToolTip="{markup:Loc SystemButtonMin}" 
                                            Style="{StaticResource MinimizeStyle}"
                                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMinBtnEnable, Converter={StaticResource VisibleIfTrueConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>

                                    <Button x:Name="MaxBtn"   ToolTip="{markup:Loc SystemButtonMax}" 
                                            Style="{StaticResource MaximizeStyle}"
                                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsMaxBtnEnable, Converter={StaticResource VisibleIfTrueConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>

                                    <Button x:Name="CloseBtn" ToolTip="{markup:Loc SystemButtonClose}"
                                            Style="{StaticResource CloseStyle}"
                                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsCloseBtnEnable, Converter={StaticResource VisibleIfTrueConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CloseCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>

                                </StackPanel>
                            </Grid>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" TargetName="MainBorder" Value="6 4 6 6"/>
                            <Setter Property="ToolTip" TargetName="MaxBtn" Value="{markup:Loc SystemButtonRestore}"/>
                            <Setter Property="Style" TargetName="MaxBtn" Value="{StaticResource NormalStyle}"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            
                            <Setter Property="Margin" TargetName="MainBorder" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ShadowSpaceThickness}"/>
                            <Setter Property="ToolTip" TargetName="MaxBtn" Value="{markup:Loc SystemButtonMax}"/>
                            <Setter Property="Style" TargetName="MaxBtn" Value="{StaticResource MaximizeStyle}"/>
                        </Trigger>
                        <Trigger Property="Topmost" Value="True">
                            <Setter Property="ToolTip" TargetName="TopmostBtn" Value="{markup:Loc SystemButtonCancelTopmost}"/>
                            <Setter Property="Style" TargetName="TopmostBtn" Value="{StaticResource TopmostStyle}"/>
                        </Trigger>
                        <Trigger Property="Topmost" Value="False">
                            <Setter Property="ToolTip" TargetName="TopmostBtn" Value="{markup:Loc SystemButtonTopmost}"/>
                            <Setter Property="Style" TargetName="TopmostBtn" Value="{StaticResource TopmostNormalStyle}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>