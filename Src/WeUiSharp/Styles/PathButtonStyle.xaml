<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WeUiSharp.Controls"
                    xmlns:local="clr-namespace:WeUiSharp">

    <Style x:Key="DefaultPathButtonStyle" TargetType="controls:PathButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        
        <Setter Property="DefaultForeground" Value="Gray" />
        <Setter Property="DefaultBackground" Value="White" />
        <Setter Property="MouseOverForeground" Value="Black" />
        <Setter Property="MouseOverBackground" Value="LightGray" />
        <Setter Property="PressedForeground" Value="Green" />
        <Setter Property="PressedBackground" Value="LightGray" />
        <!--<Setter Property="CornerRadius" Value="{b}" />-->
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PathButton">
                    <Border x:Name="PathButtonBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Padding="{TemplateBinding Padding}">
                        
                        <Path Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.Data}" 
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.Height}" 
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.Width}" 
                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.Visibility}" 
                              HorizontalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.HorizontalAlignment}"
                              VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.VerticalAlignment}"
                              Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.Margin}" 
                              Stretch="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.Stretch}" 
                              StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.StrokeThickness}"
                              UseLayoutRounding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.UseLayoutRounding}" 
                              SnapsToDevicePixels="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path.SnapsToDevicePixels}"
                              Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, UpdateSourceTrigger=PropertyChanged}" />
                        
                        <!--<ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Path, Mode=TwoWay}"
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{Binding DefaultBackground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground" Value="{Binding DefaultForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:PathButton" BasedOn="{StaticResource DefaultPathButtonStyle}" />

</ResourceDictionary>