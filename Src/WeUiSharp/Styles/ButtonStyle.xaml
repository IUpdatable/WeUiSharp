<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WeUiSharp.Controls"
                    xmlns:enums="clr-namespace:WeUiSharp.Enums"
                    xmlns:windows="clr-namespace:WeUiSharp.Windows"
                    xmlns:primitives="clr-namespace:WeUiSharp.Controls.Primitives"
                    xmlns:local="clr-namespace:WeUiSharp">

    <Style x:Key="DefaultButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10 2 10 2" />
        <!--<Setter Property="Padding" Value="11 2 11 5" />-->
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Background"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.MouseOver.Background}" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>

                        <!--<Trigger Property="GreenType" Value="{x:Static enums:ButtonGreenType.Hover}">
                            <Setter Property="Background" Value="{DynamicResource Button.Default.Static.Background}" />
                            <Setter Property="Foreground" Value="{DynamicResource Button.Default.Static.Foreground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Button.Default.Static.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.Hover}"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource Button.Default.MouseOver.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Button.Default.MouseOver.Foreground}"/>
                            <Setter Property="BorderThickness" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.Hover}"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource Button.Default.Pressed.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Button.Default.Pressed.Foreground}"/>
                            <Setter Property="BorderThickness" Value="0" />
                        </MultiTrigger>-->
                        
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}"/>

    <Style TargetType="controls:Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Button">
                    <Border
                        x:Name="Background"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.MouseOver.Background}" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!-- ButtonGreenType.Foreground -->
            <Trigger Property="GreenType" Value="{x:Static enums:ButtonGreenType.Foreground}">
                <Setter Property="Background"  Value="{DynamicResource Button.GreenForeground.Static.Background}" />
                <Setter Property="Foreground"  Value="{DynamicResource Button.GreenForeground.Static.Foreground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Button.GreenForeground.Static.Border}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.Foreground}"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"  Value="{DynamicResource Button.GreenForeground.MouseOver.Background}"/>
                <Setter Property="Foreground"  Value="{DynamicResource Button.GreenForeground.MouseOver.Foreground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Button.GreenForeground.MouseOver.Background}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.Foreground}"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"  Value="{DynamicResource Button.GreenForeground.Pressed.Background}"/>
                <Setter Property="Foreground"  Value="{DynamicResource Button.GreenForeground.Pressed.Foreground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Button.GreenForeground.Pressed.Background}"/>
            </MultiTrigger>
            
            <!-- ButtonGreenType.Hover -->
            <Trigger Property="GreenType" Value="{x:Static enums:ButtonGreenType.Hover}">
                <Setter Property="Background"  Value="{DynamicResource Button.GreenHover.Static.Background}" />
                <Setter Property="Foreground"  Value="{DynamicResource Button.GreenHover.Static.Foreground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Button.GreenHover.Static.Border}" />
            </Trigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.Hover}"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"  Value="{DynamicResource Button.GreenHover.MouseOver.Background}"/>
                <Setter Property="Foreground"  Value="{DynamicResource Button.GreenHover.MouseOver.Foreground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Button.GreenHover.MouseOver.Background}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.Hover}"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"  Value="{DynamicResource Button.GreenHover.Pressed.Background}"/>
                <Setter Property="Foreground"  Value="{DynamicResource Button.GreenHover.Pressed.Foreground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Button.GreenHover.Pressed.Background}"/>
            </MultiTrigger>
            
            
            <!-- ButtonGreenType.All -->
            <Trigger Property="GreenType" Value="{x:Static enums:ButtonGreenType.All}">
                <Setter Property="Background" Value="{DynamicResource Button.GreenAll.Static.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource Button.GreenAll.Static.Foreground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Button.GreenAll.Static.Border}" />
            </Trigger>
            
            <Trigger Property="GreenType" Value="{x:Static enums:ButtonGreenType.All}">
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.All}"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"  Value="{DynamicResource Button.GreenAll.MouseOver.Background}"/>
                <Setter Property="Foreground"  Value="{DynamicResource Button.GreenAll.MouseOver.Foreground}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.All}"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"  Value="{DynamicResource Button.GreenAll.Pressed.Background}"/>
                <Setter Property="Foreground"  Value="{DynamicResource Button.GreenAll.Pressed.Foreground}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="GreenType" Value="{x:Static enums:ButtonGreenType.All}"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Button.GreenAll.Diable.Background}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>