<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WeUiSharp.Controls"
                    xmlns:local="clr-namespace:WeUiSharp.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/Geometries.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--下拉项 样式-->
    <Style TargetType="ComboBoxItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ComboBoxItem.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxItem.MouseOver.Border}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Border Width="30" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Path x:Name="CheckPath" Visibility="Hidden" Data="{StaticResource WeUiGeometry_Check}" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Width="11" Height="8"
                                  Stretch="UniformToFill" StrokeThickness="0" Fill="{DynamicResource ComboBoxItem.Selected.Tick.Foreground}"/>
                            </Border>
                            
                            <ContentPresenter x:Name="contentPresenter" Margin="0 4 10 3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ComboBoxItem.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="CheckPath" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 下拉框切换按钮 样式 -->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="templateRoot" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                                Width="30"  BorderThickness="1 0 0 0" BorderBrush="{TemplateBinding BorderBrush}"  SnapsToDevicePixels="true">
                            <Path x:Name="arrow" Data="{StaticResource DownGeometry}" 
                                  Stretch="Uniform" Width="10" Height="6" Fill="{TemplateBinding BorderBrush}" 
                                  HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="arrow" Value="{StaticResource UpGeometry}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"  Value="{DynamicResource ComboBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="{DynamicResource ComboBox.Static.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" PlacementTarget="{Binding ElementName=toggleButton}" 
                               AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                               Placement="Bottom">
                            <Border x:Name="dropDownBorder"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1 1 1 1" 
                                    Background="{TemplateBinding Background}"
                                    VerticalAlignment="Stretch">
                                <ScrollViewer Margin="0" VerticalAlignment="Stretch" x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" TextOptions.TextFormattingMode="Display"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.Column="0" x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                      Background="{Binding Background,RelativeSource={RelativeSource TemplatedParent}}" 
                                      Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxToggleButton}"/>
                        <ContentPresenter Grid.Column="0" x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.MouseOver.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>